rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{path=**}/items/{item} {
      allow read;
    }

    match /users/{uid} {
      allow read;
      allow write: if request.auth != null
        && request.auth.uid == uid
        && request.resource.data.keys().toSet().hasOnly(["displayName", "createdAt"])
        && request.resource.data.displayName is string
        && request.resource.data.createdAt is timestamp
        && request.resource.data.displayName == request.auth.token.name
        && request.resource.data.createdAt == request.time;
    }

    match /users/{uid}/items/{item} {
      allow read;
      allow write: if request.auth != null
        && request.auth.uid == uid
        && exists(/databases/$(database)/documents/users/$(uid))
        && request.resource.data.keys().toSet().hasOnly(["name", "description", "price", "createdAt"])
        && request.resource.data.name is string
        && request.resource.data.description is string
        && request.resource.data.price is int
        && request.resource.data.createdAt is timestamp
        && request.resource.data.name.size() > 0
        && request.resource.data.description.size() > 0
        && request.resource.data.price > 0
        && request.resource.data.createdAt == request.time;
    }
  }
}